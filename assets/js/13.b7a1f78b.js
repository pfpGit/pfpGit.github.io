(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{220:function(t,s,a){"use strict";a.r(s);var n=a(17),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"重排-reflow-和重绘-repaint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重排-reflow-和重绘-repaint"}},[t._v("#")]),t._v(" 重排(reflow)和重绘(repaint)")]),t._v(" "),a("h2",{attrs:{id:"页面生成的过程："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面生成的过程："}},[t._v("#")]),t._v(" 页面生成的过程：")]),t._v(" "),a("ol",[a("li",[t._v("HTML 被 HTML 解析器解析成 DOM 树；")]),t._v(" "),a("li",[t._v("CSS 被 CSS 解析器解析成 CSSOM 树；")]),t._v(" "),a("li",[t._v("结合 DOM 树和 CSSOM 树，生成一棵渲染树(Render Tree)，这一过程称为 Attachment；")]),t._v(" "),a("li",[t._v("生成布局(flow)，浏览器在屏幕上“画”出渲染树中的所有节点；")]),t._v(" "),a("li",[t._v("将布局绘制(paint)在屏幕上，显示出整个页面。")])]),t._v(" "),a("p",[t._v("第四步和第五步是最耗时的部分，这两步合起来，就是我们通常所说的渲染。")]),t._v(" "),a("p",[a("img",{attrs:{src:"img/170af501e710ce67.jpeg",alt:"渲染过程"}})]),t._v(" "),a("h2",{attrs:{id:"渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染"}},[t._v("#")]),t._v(" 渲染")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("在页面的生命周期中，网页生成的时候，至少会渲染一次。在用户访问的过程中，还会不断触发重排(reflow)和重绘(repaint)，不管页面发生了重绘还是重排，都会影响性能，最可怕的是重排，会使我们付出高额的性能代价，所以我们应尽量避免。")]),t._v(" "),a("h2",{attrs:{id:"重排比重绘大："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重排比重绘大："}},[t._v("#")]),t._v(" 重排比重绘大：")]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[t._v("重绘：某些元素的外观被改变，例如：元素的填充颜色")]),t._v(" "),a("li",[t._v("重排：重新生成布局，重新排列元素。")])]),t._v(" "),a("blockquote",[a("p",[t._v("就如上面的概念一样，单单改变元素的外观，肯定不会引起网页重新生成布局，但当浏览器完成重排之后，将会重新绘制受到此次重排影响的部分。比如改变元素高度，这个元素乃至周边dom都需要重新绘制。")])]),t._v(" "),a("p",[t._v("也就是说："),a("code",[t._v("重绘不一定导致重排，但重排一定会导致重绘。")])]),t._v(" "),a("h2",{attrs:{id:"重排-reflow-："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重排-reflow-："}},[t._v("#")]),t._v(" 重排(reflow)：")]),t._v(" "),a("hr"),t._v(" "),a("blockquote",[a("p",[t._v("概念：")]),t._v(" "),a("p",[t._v("当DOM的变化影响了元素的几何信息(元素的的位置和尺寸大小)，浏览器需要重新计算元素的几何属性，将其安放在界面中的正确位置，这个过程叫做重排。")])]),t._v(" "),a("p",[t._v("重排也叫回流，简单的说就是重新生成布局，重新排列元素。")]),t._v(" "),a("h2",{attrs:{id:"下面情况会发生重排："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下面情况会发生重排："}},[t._v("#")]),t._v(" 下面情况会发生重排：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("页面初始渲染，这是开销最大的一次重排")])]),t._v(" "),a("li",[a("p",[t._v("添加/删除可见的DOM元素")])]),t._v(" "),a("li",[a("p",[t._v("改变元素位置")])]),t._v(" "),a("li",[a("p",[t._v("改变元素尺寸，比如边距、填充、边框、宽度和高度等")])]),t._v(" "),a("li",[a("p",[t._v("改变元素内容，比如文字数量，图片大小等")])]),t._v(" "),a("li",[a("p",[t._v("改变元素字体大小")])]),t._v(" "),a("li",[a("p",[t._v("改变浏览器窗口尺寸，比如resize事件发生时")])]),t._v(" "),a("li",[a("p",[t._v("激活CSS伪类（例如："),a("code",[t._v(":hover")]),t._v("）")])]),t._v(" "),a("li",[a("p",[t._v("设置 style 属性的值，因为通过设置style属性改变结点样式的话，每一次设置都会触发一次reflow")])]),t._v(" "),a("li",[a("p",[t._v("查询某些属性或调用某些计算方法：offsetWidth、offsetHeight等，除此之外，当我们调用 "),a("code",[t._v("getComputedStyle")]),t._v("方法，或者IE里的 "),a("code",[t._v("currentStyle")]),t._v(" 时，也会触发重排，原理是一样的，都为求一个“即时性”和“准确性”。")]),t._v(" "),a("p",[t._v("常见引起重排属性和方法\t--\t--\t--\nwidth\theight\tmargin\tpadding\ndisplay\tborder-width\tborder\tposition\noverflow\tfont-size\tvertical-align\tmin-height\nclientWidth\tclientHeight\tclientTop\tclientLeft\noffsetWudth\toffsetHeight\toffsetTop\toffsetLeft\nscrollWidth\tscrollHeight\tscrollTop\tscrollLeft\nscrollIntoView()\tscrollTo()\tgetComputedStyle()\t\ngetBoundingClientRect()\tscrollIntoViewIfNeeded()")])])]),t._v(" "),a("h2",{attrs:{id:"重排影响的范围："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重排影响的范围："}},[t._v("#")]),t._v(" 重排影响的范围：")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("由于浏览器渲染界面是基于流失布局模型的，所以触发重排时会对周围DOM重新排列，影响的范围有两种：")]),t._v(" "),a("ul",[a("li",[t._v("全局范围：从根节点html开始对整个渲染树进行重新布局。")]),t._v(" "),a("li",[t._v("局部范围：对渲染树的某部分或某一个渲染对象进行重新布局\n全局范围重排：")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("hello"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("strong")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Name:"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("strong")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("BDing"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("male"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("coding"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("loving"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("当p节点上发生reflow时，hello和body也会重新渲染，甚至h5和ol都会收到影响。")]),t._v(" "),a("h2",{attrs:{id:"局部范围重排："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局部范围重排："}},[t._v("#")]),t._v(" 局部范围重排：")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("用局部布局来解释这种现象：把一个dom的宽高之类的几何信息定死，然后在dom内部触发重排，就只会重新渲染该dom内部的元素，而不会影响到外界。")]),t._v(" "),a("h2",{attrs:{id:"重绘-repaints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重绘-repaints"}},[t._v("#")]),t._v(" 重绘(Repaints):")]),t._v(" "),a("hr"),t._v(" "),a("blockquote",[a("p",[t._v("概念：")]),t._v(" "),a("p",[t._v("当一个元素的外观发生改变，但没有改变布局,重新把元素外观绘制出来的过程，叫做重绘。")])]),t._v(" "),a("p",[t._v("常见的引起重绘的属性：")]),t._v(" "),a("p",[t._v("属性：\t--\t--\t--\ncolor\tborder-style\tvisibility\tbackground\ntext-decoration\tbackground-image\tbackground-position\tbackground-repeat\noutline-color\toutline\toutline-style\tborder-radius\noutline-width\tbox-shadow\tbackground-size")]),t._v(" "),a("h2",{attrs:{id:"重排优化建议："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重排优化建议："}},[t._v("#")]),t._v(" 重排优化建议：")]),t._v(" "),a("blockquote",[a("p",[t._v("重排的代价是高昂的，会破坏用户体验，并且让UI展示非常迟缓。通过减少重排的负面影响来提高用户体验的最简单方式就是尽可能的减少重排次数，重排范围。下面是一些行之有效的建议，大家可以用来参考。")])]),t._v(" "),a("h3",{attrs:{id:"减少重排范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少重排范围"}},[t._v("#")]),t._v(" 减少重排范围")]),t._v(" "),a("p",[t._v("我们应该尽量以局部布局的形式组织html结构，尽可能小的影响重排的范围。")]),t._v(" "),a("p",[t._v("尽可能在低层级的DOM节点上，而不是像上述全局范围的示例代码一样，如果你要改变p的样式，class就不要加在div上，通过父元素去影响子元素不好。")]),t._v(" "),a("p",[t._v("不要使用 table 布局，可能很小的一个小改动会造成整个 table 的重新布局。那么在不得已使用table的场合，可以设置table-layout:auto;或者是table-layout:fixed这样可以让table一行一行的渲染，这种做法也是为了限制reflow的影响范围。")]),t._v(" "),a("h3",{attrs:{id:"减少重排次数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少重排次数"}},[t._v("#")]),t._v(" 减少重排次数")]),t._v(" "),a("ol",[a("li",[t._v("样式集中改变\n不要频繁的操作样式，对于一个静态页面来说，明智且可维护的做法是更改类名而不是修改样式，对于动态改变的样式来说，相较每次微小修改都直接触及元素，更好的办法是统一在 cssText 变量中编辑。虽然现在大部分现代浏览器都会有 Flush 队列进行渲染队列优化，但是有些老版本的浏览器比如IE6的效率依然低下。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bad")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" left "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" top "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" left "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"px"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" top "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"px"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当top和left的值是动态计算而成时...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// better ")]),t._v("\nel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"; left: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" left "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"px; top: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" top "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"px;"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// better")]),t._v("\nel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("className "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" className"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("分离读写操作")])]),t._v(" "),a("p",[t._v("DOM 的多个读操作（或多个写操作），应该放在一起。不要两个读操作之间，加入一个写操作。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bad 强制刷新 触发四次重排+重绘")]),t._v("\ndiv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetLeft "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetTop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetRight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bottom "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetBottom "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// good 缓存布局信息 相当于读写分离 触发一次重排+重绘")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" curLeft "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetLeft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" curTop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetTop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" curRight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetRight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" curBottom "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetBottom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ndiv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" curLeft "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" curTop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" curRight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bottom "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" curBottom "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("原来的操作会导致四次重排，读写分离之后实际上只触发了一次重排，这都得益于浏览器的渲染队列机制：")]),t._v(" "),a("blockquote",[a("p",[t._v("当我们修改了元素的几何属性，导致浏览器触发重排或重绘时。它会把该操作放进渲染队列，等到队列中的操作到了一定的数量或者到了一定的时间间隔时，浏览器就会批量执行这些操作。")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("将 DOM 离线")])]),t._v(" "),a("p",[t._v("“离线”意味着不在当前的 DOM 树中做修改，我们可以这样做：")]),t._v(" "),a("p",[t._v("使用 display:none")]),t._v(" "),a("p",[t._v("一旦我们给元素设置 display:none 时（只有一次重排重绘），元素便不会再存在在渲染树中，相当于将其从页面上“拿掉”，我们之后的操作将不会触发重排和重绘，添加足够多的变更后，通过 display属性显示（另一次重排重绘）。通过这种方式即使大量变更也只触发两次重排。另外，visibility : hidden 的元素只对重绘有影响，不影响重排。")]),t._v(" "),a("p",[t._v("通过 documentFragment 创建一个 dom 碎片,在它上面批量操作 dom，操作完成之后，再添加到文档中，这样只会触发一次重排。")]),t._v(" "),a("p",[t._v("复制节点，在副本上工作，然后替换它！")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("使用 absolute 或 fixed 脱离文档流")])]),t._v(" "),a("p",[t._v("使用绝对定位会使的该元素单独成为渲染树中 body 的一个子元素，重排开销比较小，不会对其它节点造成太多影响。当你在这些节点上放置这个元素时，一些其它在这个区域内的节点可能需要重绘，但是不需要重排。")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("优化动画")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("可以把动画效果应用到 position属性为 absolute 或 fixed 的元素上，这样对其他元素影响较小。")])]),t._v(" "),a("li",[a("p",[t._v("动画效果还应牺牲一些平滑，来换取速度，这中间的度自己衡量： 比如实现一个动画，以1个像素为单位移动这样最平滑，但是Layout就会过于频繁，大量消耗CPU资源，如果以3个像素为单位移动则会好很多")])]),t._v(" "),a("li",[a("p",[t._v("启用GPU加速 GPU 硬件加速是指应用 GPU 的图形性能对浏览器中的一些图形操作交给 GPU 来完成，因为 GPU 是专门为处理图形而设计，所以它在速度和能耗上更有效率。")])]),t._v(" "),a("li",[a("p",[t._v("GPU 加速通常包括以下几个部分：Canvas2D，布局合成, CSS3转换（transitions），CSS3 3D变换（transforms），WebGL和视频(video)。")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n  * 根据上面的结论\n  * 将 2d transform 换成 3d\n  * 就可以强制开启 GPU 加速\n  * 提高动画性能\n  */")]),t._v("\n  div "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    transform"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("translate3d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"如何在浏览器中查看页面渲染时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何在浏览器中查看页面渲染时间"}},[t._v("#")]),t._v(" 如何在浏览器中查看页面渲染时间")]),t._v(" "),a("hr"),t._v(" "),a("ol",[a("li",[t._v("打开开发者工具：点击 Performance 左侧有个小圆点 点击刷新页面会录制整个页面加载出来 时间的分配情况。如下图")])]),t._v(" "),a("p",[a("img",{attrs:{src:"img/170af50e460d9a23.jpeg",alt:"渲染时序图"}})]),t._v(" "),a("ul",[a("li",[t._v("蓝色: 网络通信和HTML解析")]),t._v(" "),a("li",[t._v("黄色: JavaScript执行")]),t._v(" "),a("li",[t._v("紫色: 样式计算和布局，即重排")]),t._v(" "),a("li",[t._v("绿色: 重绘\n哪种色块比较多，就说明性能耗费在那里。色块越长，问题越大。")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("点击 Event Log：单独勾选 Loading 项会显示 html 和 css 加载时间。如下图：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"img/170af5139b7ba71b.jpeg",alt:"渲染时序图"}})]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[t._v("解析完 DOM+CSSOM 之后会生成一个渲染树 Render Tree，就是 DOM 和 CSSOM 的一一对应关系。")])]),t._v(" "),a("li",[a("p",[t._v("通过渲染树中在屏幕上“画”出的所有节点，称为渲染。")])])]),t._v(" "),a("h2",{attrs:{id:"小结："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结："}},[t._v("#")]),t._v(" 小结：")]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[t._v("渲染的三个阶段 Layout，Paint，Composite Layers。")]),t._v(" "),a("li",[t._v("Layout：重排，又叫回流。")]),t._v(" "),a("li",[t._v("Paint:重绘，重排重绘这些步骤都是在 CPU 中发生的。")]),t._v(" "),a("li",[t._v("Compostite Layers：CPU 把生成的 BitMap（位图）传输到 GPU，渲染到屏幕。")]),t._v(" "),a("li",[t._v("CSS3 就是在 GPU 发生的：Transform Opacity。在 GPU 发生的属性比较高效。所以 CSS3 性能比较高。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);